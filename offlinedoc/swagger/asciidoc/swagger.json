{"swagger":"2.0","info":{"description":"Petstore API Description","version":"1.0.0","title":"Swagger Petstore","contact":{"name":"TestName","url":"http:/test-url.com","email":"test@test.de"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"localhost:8080","basePath":"/","tags":[{"name":"Pets","description":"Operations about pets"},{"name":"Stores","description":"Operations about store"},{"name":"Users","description":"Operations about user"}],"paths":{"/pets":{"post":{"tags":["Pets"],"summary":"Add a new pet to the store","operationId":"addPetUsingPOST","consumes":["application/json"],"produces":["application/xml","application/x-smile","application/json"],"parameters":[{"in":"body","name":"pet","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid input"}},"deprecated":false},"put":{"tags":["Pets"],"summary":"Update an existing pet","operationId":"updatePetUsingPUT","consumes":["application/json"],"produces":["application/xml","application/x-smile","application/json"],"parameters":[{"in":"body","name":"pet","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"201":{"description":"Created"},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write_pets","read_pets"]}],"deprecated":false}},"/pets/findByStatus":{"get":{"tags":["Pets"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma seperated strings","operationId":"findPetsByStatusUsingGET","produces":["application/xml","application/x-smile","application/json"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"string","default":"available","allowEmptyValue":false,"enum":["available","pending","sold"]}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid status value"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"petstore_auth":["write_pets","read_pets"]}],"deprecated":false}},"/pets/findByTags":{"get":{"tags":["Pets"],"summary":"Finds Pets by tags","description":"Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTagsUsingGET","produces":["application/xml","application/x-smile","application/json"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"string","allowEmptyValue":false}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid tag value"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"petstore_auth":["write_pets","read_pets"]}],"deprecated":true}},"/pets/{petId}":{"get":{"tags":["Pets"],"summary":"Find pet by ID","description":"Returns a pet when ID < 10. ID > 10 or nonintegers will simulate API error conditions","operationId":"getPetByIdUsingGET","produces":["application/xml","application/x-smile","application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"string","maxLength":5,"minLength":1}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write_pets","read_pets"]},{"api_key":[]}],"deprecated":false}},"/stores/order":{"post":{"tags":["Stores"],"summary":"Place an order for a pet","operationId":"placeOrderUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"complete","in":"query","required":false,"type":"boolean"},{"name":"id","in":"query","required":false,"type":"integer","format":"int64"},{"name":"identifier","in":"query","required":false,"type":"integer","format":"int64"},{"name":"petId","in":"query","required":false,"type":"integer","format":"int64"},{"name":"quantity","in":"query","required":false,"type":"integer","maximum":100.0,"exclusiveMaximum":false,"minimum":1.0,"exclusiveMinimum":false,"format":"int32"},{"name":"shipDate","in":"query","required":false,"type":"string","format":"date-time"},{"name":"status","in":"query","description":"Order Status","required":false,"type":"string","enum":["placed","approved","delivered"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Order"}},"201":{"description":"Created"},"400":{"description":"Invalid Order"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/stores/order/{orderId}":{"get":{"tags":["Stores"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions","operationId":"getOrderByIdUsingGET","produces":["application/json"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"string","maxLength":5,"minLength":1}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Order not found"}},"deprecated":false},"delete":{"tags":["Stores"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors","operationId":"deleteOrderUsingDELETE","produces":["application/json"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"string","minLength":1}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"204":{"description":"No Content"},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Order not found"}},"deprecated":false}},"/users":{"post":{"tags":["Users"],"summary":"Create user","description":"This can only be done by the logged in user.","operationId":"createUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"user","description":"Created user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/User"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/users/createWithArray":{"post":{"tags":["Users"],"summary":"Creates list of users with given input array","operationId":"createUsersWithArrayInputUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"users","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/User"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/users/createWithList":{"post":{"tags":["Users"],"summary":"Creates list of users with given input array","operationId":"createUsersWithListInputUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"users","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/users/login":{"get":{"tags":["Users"],"summary":"Logs user into the system","operationId":"loginUserUsingGET","produces":["application/json"],"parameters":[{"name":"password","in":"query","description":"The password for login in clear text","required":true,"type":"string","allowEmptyValue":false},{"name":"username","in":"query","description":"The user name for login","required":true,"type":"string","allowEmptyValue":false}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Invalid username/password supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/users/logout":{"get":{"tags":["Users"],"summary":"Logs out current logged in user session","operationId":"logoutUserUsingGET","produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/users/{username}":{"get":{"tags":["Users"],"summary":"Get user by user name","operationId":"getUserByNameUsingGET","produces":["application/json"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing. ","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"User not found"}},"deprecated":false},"put":{"tags":["Users"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUserUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"email","in":"query","required":false,"type":"string"},{"name":"firstName","in":"query","required":false,"type":"string","maxLength":200,"minLength":1},{"name":"id","in":"query","required":false,"type":"integer","format":"int64"},{"name":"identifier","in":"query","required":false,"type":"string"},{"name":"lastName","in":"query","required":false,"type":"string","maxLength":200,"minLength":1},{"name":"password","in":"query","required":false,"type":"string"},{"name":"phone","in":"query","required":false,"type":"string"},{"name":"userStatus","in":"query","description":"User Status","required":false,"type":"integer","format":"int32","enum":["1-registered","2-active","3-closed"]},{"name":"username","in":"path","description":"name that need to be deleted","required":true,"type":"string"},{"name":"username","in":"query","required":false,"type":"string","maxLength":100,"minLength":1}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"201":{"description":"Created"},"400":{"description":"Invalid user supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"User not found"}},"deprecated":false},"delete":{"tags":["Users"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUserUsingDELETE","produces":["application/json"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"204":{"description":"No Content"},"400":{"description":"Invalid username supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"User not found"}},"deprecated":false}}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"api_key","in":"header"},"petstore_auth":{"type":"oauth2","authorizationUrl":"http://petstore.swagger.io/api/oauth/dialog","flow":"implicit","scopes":{"write_pets":"modify pets in your account","read_pets":"read your pets"}}},"definitions":{"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string","minLength":1,"maxLength":100}},"title":"Category"},"Order":{"type":"object","properties":{"complete":{"type":"boolean"},"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32","minimum":1.0,"maximum":100.0,"exclusiveMinimum":false,"exclusiveMaximum":false},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]}},"title":"Order"},"Pet":{"type":"object","properties":{"category":{"$ref":"#/definitions/Category"},"id":{"type":"integer","format":"int64"},"name":{"type":"string","minLength":1,"maxLength":100},"photoUrls":{"type":"array","items":{"type":"string"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]},"tags":{"type":"array","items":{"$ref":"#/definitions/Tag"}}},"title":"Pet"},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string","minLength":1,"maxLength":100}},"title":"Tag"},"User":{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string","minLength":1,"maxLength":200},"id":{"type":"integer","format":"int64"},"lastName":{"type":"string","minLength":1,"maxLength":200},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"},"username":{"type":"string","minLength":1,"maxLength":100}},"title":"User"}}}